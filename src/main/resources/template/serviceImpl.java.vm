package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import com.tupperware.auto.form.${entity}Helper;
import com.tupperware.auto.mysql.mapper.${entity}Mapper;
import com.tupperware.auto.mysql.model.${entity};
import com.tupperware.auto.service.I${entity}Service;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import com.tupperware.auto.commons.utils.DataInfo;
import com.tupperware.auto.commons.utils.PageInfo;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
/**
 * <p>
 * ${table.comment}  服务实现类
 * </p>
 * @author ${author}
 * @since ${date}
 */
@Service
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {
	
	 private static Logger logger = Logger.getLogger(${table.serviceImplName}.class);
	
	@Autowired private ${entity}Mapper mapper;	
	 
	private ${entity}Helper helper;

	private int count = 0;

	@Autowired
	public void setBaseMapper() {
		super.baseMapper = mapper;
	}

	
	public void setHelper(${entity}Helper helper) {
		this.helper = helper;
	}

	
	public boolean Add(${entity} entity) {
		return super.insert(entity);
	}
	
 	public List<${entity}> getMapParams(Map<String, String> params) {
		// TODO Auto-generated method stub
		return mapper.selectByMapParam(params);
	}
	public List<${entity}>getByFilter(String organno, String year, String month, String week, String date,
			String organtype) {
		
		return mapper.getByFilter(organno, year, month, week, date, organtype);
	}
	public ${entity} getTop1(){
		return mapper.selectTop${entity}(1);	
	}
	
	public void selectDataGrid(PageInfo pageInfo) {
	     	EntityWrapper<${entity}> wrapper=new EntityWrapper<${entity}> ();
	   		/*此处写查询条件
	   		   EntityWrapper ew=new EntityWrapper();
		       ew.setEntity(new User());
		       String name="wang";
		       Integer age=16;
		       ew.where("name = {0}",name).andNew("age > {0}",age).orderBy("age");
		       List<User> list = userService.selectList(ew);
		       Page page2 = userService.selectPage(page, ew);
	   		*/
	   		
	        Page<${entity}> page = new Page<${entity}>(pageInfo.getNowpage(), pageInfo.getSize());
	        List<${entity}> list = mapper.select${entity}List(page, pageInfo.getSort(), pageInfo.getOrder());
	        pageInfo.setRows(list); 
	        pageInfo.setTotal(mapper.selectCount(wrapper)); 
	
	}
	
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public List<${entity}> getJson(String outletNo,String yearMonth) {
		 EntityWrapper wrapper=new EntityWrapper();
		 wrapper.setEntity(new ${entity}());
		 wrapper.where("year_Month = {0} and outletNo ={1} ", yearMonth,outletNo);
		 return mapper.selectList(wrapper); 
	}

	public List<${entity}> list() {
        EntityWrapper wrapper=new EntityWrapper();
        wrapper.setEntity(new ${entity}());
        return mapper.selectList(wrapper);
	}




	@Override
	public void selectDataGrid(DataInfo dataInfo) {
		// TODO Auto-generated method stub 
	}

	//${date}
#foreach($controller in $cfg )
	public List<${entity}>  ${controller.controller.functionName}(
	#foreach($param in ${controller.params})
			String ${param.name}${param.endfix} ${param.seperator}
	#end
        ) {
        EntityWrapper<${entity}> wrapper = new EntityWrapper<>();
        wrapper.setEntity(new ${entity}());
	#foreach($param in ${controller.params})
            wrapper.and("${param.column} ${param.operator} {0}", ${param.name}${param.endfix}); //${param.value}
	#end
	#if(${controller.orderColumn}!=""&&${controller.orderColumn})
            wrapper.orderBy("${controller.orderColumn}");
	#end

        logger.info(wrapper.getSqlSegment());

        return mapper.selectList(wrapper);

        }

#end

}
